[honeypot]

# IP addresses to listen for incoming SSH connections.
#
# input: IP Address
# required: YES
ssh_addr = 127.0.0.1

# Port to listen for incoming SSH connections.
#
# input: Number
# required: YES
# default: 2222
ssh_port = 2222

# IP addresses to send outgoing SSH connections.
# 0.0.0.0 for all interfaces
#
# input: IP Address
# required: YES
client_addr =  0.0.0.0

# Public and private SSH key files. 
#
# input: Text
# required: YES
# default: id_rsa.pub
# default: id_rsa
# default: id_dsa.pub
# default: id_dsa
public_key = id_rsa.pub
private_key = id_rsa
public_key_dsa = id_dsa.pub
private_key_dsa = id_dsa

# SSH banner to send to clients
# If not specified, HonSSH will try and obtain it by connecting to
# honey_addr:honey_port
# 
# input: text
# required: No
# default: 
ssh_banner =

# connection_timeout: connection timeout for pre and post auth handlers
# required: YES
# default: 10
connection_timeout = 10

#-----------------------#
#   HONEYPOT STATIC     #
#-----------------------#
[honeypot-static]
# Documentation to come, stick with these options and ignore honeypot-* unless you know what you are doing or fancy a challenge
enabled = true

# Should HonSSH use this plugin to get the honeypot details (before authentication)
pre-auth = true

# Should HonSSH use this plugin to get the honeypot details (after authentication)
post-auth = true

# This name will be used when logging to any of the output mechanisms.
# Please ensure it is meaningful.
#
# input: Text
# required: YES
sensor_name = sensor

# IP addresses of the honeypot.
#
# input: IP Address
# required: YES
honey_ip =  127.0.0.1

# SSH port of the honeypot.
#
# input: Number
# required: YES
# default: 22
honey_port = 2022

#-----------------------#
# HONEYPOT RESTRICTIONS #
#-----------------------#
[hp-restrict]

# When enabled, HonSSH will restrict connections to password only and decline any public keys.
# HonSSH will not work with public keys - this should always be true.
#
# input: true/false
# required: YES
# default: true
disable_publicKey = true

# When enabled, HonSSH will block any attempts to start an X11 session.
# You can allow X11 but HonSSH will not log the session.
#
# input: true/false
# required: YES
# default: true
disable_x11 = true

# When enabled, HonSSH will block any attempts to start an SFTP session.
# HonSSH will log SFTP traffic and capture downloaded files.
#
# input: true/false
# required: YES
# default: false
disable_sftp = false

# When enabled, HonSSH will block any attempts to start an EXEC session.
# HonSSH will log all EXEC sessions, including SCP transfers.
#
# input: true/false
# required: YES
# default: false
disable_exec = false

# When enabled, HonSSH will block any attempts to start running port forwarding over SSH.
# You can allow port forwarding but HonSSH will not log the session - Yet! (log to PCAP?)
#
# input: true/false
# required: YES
# default: true
disable_port_forwarding = true

#-----------------------#
#   OUTPUT DIRECTORIES  #
#-----------------------#
[folders]

# Directory where log files will be saved in.
#
# input: Text
# required: YES
# default: logs
log_path = logs

# Directory where session files will be saved in.
#
# input: Text
# required: YES
# default: sessions
session_path = sessions

#-----------------------#
#  ADVANCED NETWORKING  #
#-----------------------#
[advNet]

# To enable this HonSSH must be ran as root or an account allowed to run
# iptables and ip link/addr commands.
#
# With this disabled, the honeypot will always see connections coming from
# honey_addr. With this enabled, connections will look as if the connections
# are coming from the attacker.
# See the Wiki page for more details.
# https://github.com/tnich/honssh/wiki/Advanced-Networking
#
# input: true/false
# required: YES
# default: false
enabled = false

#-----------------------#
#    LIVE INTERACTION   #
#-----------------------#
[interact]

# Session management interface.
#
# This is a TCP based service that can be used to interact with active
# sessions. Disabled by default.
#
# Use honsshInteraction.py to interact with this interface.
#
# input: true/false
# required: YES
# default: false
enabled = false  

# Interface to create the interaction on - 0.0.0.0 for all.
#
# input: IP Address
# required: if interact_enabled = true
# default: 127.0.0.1
interface = 127.0.0.1

# Port to create the interaction on
#
# input: Number
# required: if interact_enabled = true
# default: 5123
port = 5123

#-----------------------#
#   PASSWORD SPOOFING   #
#-----------------------#
[spoof]

# Enabling this will allow HonSSH to spoof an incorrect password with the real password. 
# A list of users and passwords must be defined in the users.cfg file.
#
# Passwords to spoof can either be a fixed list or a random chance.
# 
# See the Wiki page for more details.
# https://github.com/tnich/honssh/wiki/Password-Spoofing
#
# input: true/false
# required: YES
# default: false
enabled = false

# Location of the users.cfg file
#
# input: text
# required: if enabled is true
# default: users.cfg
users_conf = users.cfg

#----------------------------------------------#
#              LOGGING AND OUTPUTS             #
#----------------------------------------------#

#-----------------------#
#    FILE DOWNLOADING   #
#-----------------------#
[download]

# File Download
#
# HonSSH will attempt to download all scp and sftp files to a local store if this is true
#
# input: true/false
# required: YES
# default: false
passive = false

# HonSSH wil attempt to download all wget files to a local store.
# 
# I believe another tool should be used to passively capture all http(s) connections on all ports - maybe the next project?
# Until then HonSSH will use a 'best effort' approach to capture files when the wget commands is detected.
# It will not be able to capture commands such as:
# url=www.test.url; wget $url
# 
# input: true/false
# required: YES
# default: false
active = false

#-----------------------#
#     PACKET LOGGING    #
#-----------------------#
[packet_logging]

# Set to true to enable plugins to use the packet_logged function
#
# input: true/false
# required: YES
# default: false
enabled = false

[output-packets]

# Log all SSH Packets to text file (.log-adv)
#
# dependency: packet_logging MUST be enabled
# input: true/false
# required: YES
# default: false
enabled = false
